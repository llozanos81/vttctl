FROM alpine:3.14 AS build
ARG BUILD_VER
WORKDIR /home/foundry/vtt
COPY ./${BUILD_VER}/ .
RUN set -xe \
    && apk add --no-cache --update npm nodejs python3 \
    && cd resources/app/ \
    && npm install classic-level --build-from-source

FROM alpine:3.14
ARG TIMEZONE
WORKDIR /home/foundry/vtt
COPY --from=build /home/foundry/vtt ./
RUN set -xe \
    && export \
    && apk add --no-cache --update shadow nodejs npm tzdata \
    && addgroup -g 3000 -S foundry \
    && adduser -g 3000 -S foundry -G foundry \
    && usermod -u 3000 foundry \
    && npm cache clean --force \
    && npm install -g npm@latest \
    && npm install -g uuid@latest \
    && npm install -g pm2 \
    && apk del --no-cache npm shadow \
    && npm cache clean --force \
    && mkdir -p /home/foundry/userdata \
    && sed -i 's/Update Software/Update Disabled/' /home/foundry/vtt/resources/app/public/lang/en.json \
    && sed -i 's/"You may update your Foundry Virtual Tabletop software to a new version by checking for update on your preferred Software Update Channel."/"In app updates are Disabled, please use VTTctl for updates and upgrades instead."/' /home/foundry/vtt/resources/app/public/lang/en.json \
    && sed -i 's/"Check For Update"/"In app updates are Disabled, please use VTTctl for updates and upgrades instead."/' /home/foundry/vtt/resources/app/public/lang/en.json \    
    && sed -i 's/{{#unless updateButtonEnabled}}disabled{{\/unless}}/disabled/' /home/foundry/vtt/resources/app/templates/setup/setup-config.html \    
    && chown foundry:foundry -R /home/foundry/ \
    && chmod +x /home/foundry/vtt/docker-entrypoint.sh


ENV TZ=${TIMEZONE}
USER foundry
EXPOSE 30000
ENTRYPOINT [ "/home/foundry/vtt/docker-entrypoint.sh" ]